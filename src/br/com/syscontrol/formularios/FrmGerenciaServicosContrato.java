/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmGerenciaServicosContrato.java
 *
 * Created on 18/12/2011, 17:30:43
 */

package br.com.syscontrol.formularios;

import br.com.syscontrol.controller.ContratoAction;
import br.com.syscontrol.controller.ServicoAction;
import br.com.syscontrol.helper.Util;
import br.com.syscontrol.model.Contrato;
import br.com.syscontrol.model.Servico;
import br.com.syscontrol.model.ServicoContratadoTableModel;
import br.com.syscontrol.model.ServicoContrato;
import br.com.syscontrol.model.ServicoContratoTableModel;
import br.com.syscontrol.model.ServicoDisponivelTableModel;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.JTextField;

/**
 *
 * @author Diego
 */
public class FrmGerenciaServicosContrato extends javax.swing.JFrame {

    private String valorFormatado;
    private JTable tabelaServicoContrato;
    private JTextField txtTotalContrato = null;
    private ContratoAction contratoAction = null;
    private ContratoAction contratoActionOriginal;
    private List itensContratados = new ArrayList();
    private SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
    
    
    

    /** Creates new form FrmGerenciaServicosContrato */
    public FrmGerenciaServicosContrato() {
        initComponents();
    }

    public FrmGerenciaServicosContrato(ContratoAction ca,JTable tabelaServicosContrato,JTextField txtTotal) {
        initComponents();        
        contratoAction = new ContratoAction();
        contratoActionOriginal = ca;
        contratoAction = ca;
        itensContratados = this.contratoAction.getContrato().getItensContratados();       
        this.tabelaServicoContrato = tabelaServicosContrato;
        this.txtTotalContrato = txtTotal;

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableServicosDisponiveis = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        txtDesconto = new javax.swing.JTextField();
        adicionaItem = new javax.swing.JButton();
        removeItem = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableServicosContratados = new javax.swing.JTable();
        txtTotal = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        gravaItensContratados = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                fecharJanela(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                carregarTelaServicoContrato(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Serviços Disponíveis", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18))); // NOI18N

        tableServicosDisponiveis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableServicosDisponiveis);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel1.setText("% Desconto");

        txtDesconto.setFont(new java.awt.Font("Times New Roman", 1, 18));
        txtDesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                validaDesconto(evt);
            }
        });

        adicionaItem.setText("adicionar");
        adicionaItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionaItemActionPerformed(evt);
            }
        });

        removeItem.setText("remover");
        removeItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeItemActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 255, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)), "Serviços Contratados", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18))); // NOI18N

        tableServicosContratados.setBackground(new java.awt.Color(153, 255, 153));
        tableServicosContratados.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tableServicosContratados);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addContainerGap())
        );

        txtTotal.setFont(new java.awt.Font("Times New Roman", 1, 18));

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 18));
        jLabel2.setText("Total c/ Desconto");

        gravaItensContratados.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ìconIncluir.png"))); // NOI18N
        gravaItensContratados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gravaItensContratadosActionPerformed(evt);
            }
        });

        jButton4.setText("Cancelar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(adicionaItem)
                            .addComponent(removeItem))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtDesconto, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(gravaItensContratados)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addGap(143, 143, 143)
                            .addComponent(adicionaItem)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(removeItem))
                        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(gravaItensContratados)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void carregarTelaServicoContrato(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_carregarTelaServicoContrato
        /*Action usada para listar os serviços disponiveis*/
        ServicoAction servicoAction = new ServicoAction();
        /*Atribuiçoes Padroes*/
        txtTotal.setText(new Util().formataMoeda(0.0));
        txtDesconto.setText("10");
        
        try {
            /*Metodo responsavel por popular na tabela os serviços disponiveis*/
           servicoAction.popularListaServicos(tableServicosDisponiveis);

           /*Metodo responsavel por aplicar os padroes de tableModel a tabela passada no parametro*/
           this.getContratoAction().popularListaServicosContratadosGerenciador(tableServicosContratados);

            /*Se houver algum item na lista de serviços contratados, o serviço é listado na tabela*/
           if(!itensContratados.isEmpty()){
               txtTotal.setText(new Util().formataMoeda(this.getContratoAction().getContrato().getTotal()));                               
               ((ServicoContratadoTableModel)tableServicosContratados.getModel()).addListaDeItens(itensContratados);
           }
        } catch (Exception ex) {
            Logger.getLogger(FrmGerenciaServicosContrato.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_carregarTelaServicoContrato


    /*Metodo Responsavel por adicionar itens de serviço
     ao contrato e atualizar os valores nos campos e tabelas*/
    private void adicionaItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionaItemActionPerformed


        Double v,valorConvertido;        
        int desconto = Integer.parseInt(txtDesconto.getText());
        double valorDesconto;

        //Instancia variáveis
        Calendar calendar = Calendar.getInstance();
        //Atribui a data do dia
        calendar.set(calendar.get(Calendar.YEAR), calendar.get(Calendar.MONTH),calendar.get(Calendar.DATE));
        ServicoContrato servicoContrato = new ServicoContrato();

        if(tableServicosDisponiveis.getSelectedRowCount()!=0){
            //Extrai o objeto Serviço selecionado
            Servico s = (((ServicoDisponivelTableModel)tableServicosDisponiveis.getModel()).getServico(tableServicosDisponiveis.getSelectedRow()));
            //Instacia um novo Objeto Servico que seráq vinculado ao Pedido
            Servico sPedido = new Servico();
            sPedido = s;

             if(desconto > 0 && desconto <=100){
                 valorDesconto = (s.getValor()*desconto)/100;
                  sPedido.setValor(s.getValor()-valorDesconto);
             }else if(desconto >100){
                javax.swing.JOptionPane.showMessageDialog(this, "O desconto não pode ultrapassar 100%!","Aviso",1);
             }else{
                sPedido.setValor(s.getValor());
             }

            if(sPedido.getValor()>0){
                    calendar.add(Calendar.MONTH, s.getGarantia());
                    sPedido.setGarantia(s.getGarantia());
                    servicoContrato.setServico(sPedido);
                    servicoContrato.setDataProximaExecucao(format.format(calendar.getTime()));
                    servicoContrato.setValor(sPedido.getValor());

                   Iterator iterator = ((ServicoContratadoTableModel)tableServicosContratados.getModel()).getLinhas().iterator();
                   Boolean encontrado = false;

                   //Verifique se o item ja foi adicionado ao contrato
                   while(iterator.hasNext()){
                       ServicoContrato i = (ServicoContrato) iterator.next();

                       if(servicoContrato.getServico().getIdServico() == i.getServico().getIdServico()){
                        javax.swing.JOptionPane.showMessageDialog(this, "Não é possivel adicionar um serviço já contratado!","Aviso",1);
                        encontrado = true;
                       }
                   }

                   if(!encontrado){
                        try {
                            /*Inclui o serviço selecionado na tabela de Serviços do Contrato e inclui
                            o mesmo na lista de serviços do objeto Contrato*/
                            this.getContratoAction().addItemPedidoContratadoGerenciador(tableServicosContratados, servicoContrato);
                            this.getContratoAction().addServicoContrato(servicoContrato);
                             //Incrementa valor no total do pedido - INICIO
                            valorConvertido = new Util().converteValorTextoDouble(txtTotal.getText());
                            v = getContratoAction().adicionarValor(valorConvertido, sPedido.getValor());
                            this.getContratoAction().getContrato().setTotal(v);
                            valorFormatado = new Util().formataMoeda(v);
                            txtTotal.setText(valorFormatado);
                            //Incrementa valor no total do pedido - FIM
                        } catch (Exception ex) {
                            Logger.getLogger(FrmGerenciaServicosContrato.class.getName()).log(Level.SEVERE, null, ex);
                        }
                   }
                }
            }


       

    }//GEN-LAST:event_adicionaItemActionPerformed

    private void validaDesconto(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_validaDesconto
        try{
            Integer.parseInt(txtDesconto.getText());
        }catch(Exception e){
            txtDesconto.setFocusable(true);
            javax.swing.JOptionPane.showMessageDialog(this, "O valor informado para desconto nao é válido!","Aviso",1);
            
        }
    }//GEN-LAST:event_validaDesconto

    private void removeItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeItemActionPerformed
          /**Remove os itens da lista de servidços do pedido*/
        //ArrayList listaItensContratados = (ArrayList) ((ServicoContratadoTableModel)tableServicosContratados.getModel()).getLinhas();
        int[] linhasSelecionadas;
        double valorServicoSelecionado;
        Double v,valorConvertido;
        

        if(!itensContratados.isEmpty()){
            linhasSelecionadas = tableServicosContratados.getSelectedRows();
            if(linhasSelecionadas.length > 1){
                    javax.swing.JOptionPane.showMessageDialog(this, "Existe mais de uma linha selecionada. Só é possível remover 1 item por vez.","Atenção",0);
            }else if(linhasSelecionadas.length == 0){
                    javax.swing.JOptionPane.showMessageDialog(this, "Selecione um item para ser removido.","Atenção",0);
            }else{
                valorServicoSelecionado = (Double)tableServicosContratados.getValueAt(tableServicosContratados.getSelectedRow(), 1);

                try {
                    itensContratados.remove(linhasSelecionadas[0]);
                    ((ServicoContratadoTableModel)tableServicosContratados.getModel()).limpar();
                    ((ServicoContratadoTableModel)tableServicosContratados.getModel()).addListaDeItens(itensContratados);
                    valorConvertido = new Util().converteValorTextoDouble(txtTotal.getText());
                    v =  this.getContratoAction().removerValor(valorConvertido, valorServicoSelecionado);
                    this.getContratoAction().getContrato().setTotal(v);
                    valorFormatado = new Util().formataMoeda(v);
                    txtTotal.setText(valorFormatado);                   
                } catch (Exception ex) {
                    Logger.getLogger(FrmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }//GEN-LAST:event_removeItemActionPerformed

    private void gravaItensContratadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gravaItensContratadosActionPerformed
        ((ServicoContratoTableModel)this.tabelaServicoContrato.getModel()).limpar();
         ((ServicoContratoTableModel)this.tabelaServicoContrato.getModel()).addItens(this.getContratoAction().getContrato().getItensContratados());
        contratoActionOriginal = this.getContratoAction();
        this.txtTotalContrato.setText(valorFormatado);
        //frmPrincipal.getContratoAction().setContrato(this.getContratoAction().getContrato());
        // this.frmPrincipal.setTxtValorTotalContrato(valorFormatado);
        this.setVisible(false);
    }//GEN-LAST:event_gravaItensContratadosActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         try {
            this.getContratoAction().setContrato((Contrato) this.getContratoAction().getContratoPorId(this.getContratoAction().getValorCampoBusca()));
            //  ((ServicoContratoTableModel)this.tabelaServicoContrato.getModel()).addListaDeServicos(frmPrincipal.getContratoAction().getContrato().getItensContratados());
            //txtTotal.setText(new Util().formataMoeda(this.contratoAction.getContrato().getTotal()));
        } catch (Exception ex) {
            Logger.getLogger(FrmGerenciaServicosContrato.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void fecharJanela(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_fecharJanela
        try {
            this.getContratoAction().setContrato((Contrato) this.getContratoAction().getContratoPorId(this.getContratoAction().getValorCampoBusca()));
            //  ((ServicoContratoTableModel)this.tabelaServicoContrato.getModel()).addListaDeServicos(frmPrincipal.getContratoAction().getContrato().getItensContratados());
            //txtTotal.setText(new Util().formataMoeda(this.contratoAction.getContrato().getTotal()));
        } catch (Exception ex) {
            Logger.getLogger(FrmGerenciaServicosContrato.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_fecharJanela

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmGerenciaServicosContrato().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton adicionaItem;
    private javax.swing.JButton gravaItensContratados;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton removeItem;
    private javax.swing.JTable tableServicosContratados;
    private javax.swing.JTable tableServicosDisponiveis;
    private javax.swing.JTextField txtDesconto;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the contratoAction
     */
    public ContratoAction getContratoAction() {
        return contratoAction;
    }

    /**
     * @param contratoAction the contratoAction to set
     */
    public void setContratoAction(ContratoAction contratoAction) {
        this.contratoAction = contratoAction;
    }

}
