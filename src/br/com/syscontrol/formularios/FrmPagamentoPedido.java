/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * FrmPagamentoPedido.java
 *
 * Created on 23/10/2011, 16:35:21
 */

package br.com.syscontrol.formularios;

import br.com.syscontrol.controller.ParcelaAction;
import br.com.syscontrol.helper.Util;
import br.com.syscontrol.model.FormaPagamento;
import br.com.syscontrol.model.Parcela;
import br.com.syscontrol.model.ParcelaPedidoTableModel;
import br.com.syscontrol.model.Pedido;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;
import net.sf.nachocalendar.CalendarFactory;
import net.sf.nachocalendar.components.DateField;

/**
 *
 * @author Diego
 */
public class FrmPagamentoPedido extends javax.swing.JFrame {

    //Faz um backup caso o usuario desista de alterar a forma de pagamento original
    FormaPagamento formaPagamentoInicial = new FormaPagamento();
    ParcelaPedidoTableModel parcelaPedidoTableModel = new ParcelaPedidoTableModel();
    ParcelaAction parcelaAction = new ParcelaAction();
    Pedido pedido;
    SimpleDateFormat format = new SimpleDateFormat("dd/MM/yyyy");
    

    /** Creates new form FrmPagamentoPedido */
    public FrmPagamentoPedido() {
        initComponents();
        txtDataVencimentoParcela = CalendarFactory.createDateField();
        txtDataVencimentoParcela.setFont(new java.awt.Font("Times New Roman", 0, 14));

    }

    public FrmPagamentoPedido(Pedido pedido) {
        
        initComponents();        
        
        this.pedido = pedido;

        if(this.pedido.getFormaPagamento() == null){
            this.pedido.setFormaPagamento(new FormaPagamento());
        }
        
        //Instancia objeto de calendario e coloca no formulario
        txtDataVencimentoParcela = CalendarFactory.createDateField();
        txtDataVencimentoParcela.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jPanel4.add(txtDataVencimentoParcela).setBounds(145, 37, 120, 22);

        //Popula campos na tela de acordo com o pedido
        
        txtIdPedido.setText(String.valueOf(pedido.getIdPedido() != null ? pedido.getIdPedido(): ""));
        txtTotalPedido.setText(new Util().formataMoeda(pedido.getValorPedido()));
        txtSaldoPedido.setText(new Util().formataMoeda(pedido.getValorPedido()));
        txtValorSinal.setText("0.0");

        //Prepara obejo spinner para calculo automatico
        jSpinner1.addChangeListener(listener);
        this.parcelaAction.setPedido(pedido);        
}

  

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTotalPedido = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtIdPedido = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jSpinner1 = new javax.swing.JSpinner();
        jLabel9 = new javax.swing.JLabel();
        txtValorSinal = new javax.swing.JFormattedTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtValorParcela = new javax.swing.JFormattedTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaParcelas = new javax.swing.JTable();
        btnRemoveParcela = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtSaldoPedido = new javax.swing.JTextField();
        btnGravaFormaPagamento = new javax.swing.JButton();
        btnCancelaFormaPagamento = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Fechar Pagamento");
        setBackground(new java.awt.Color(153, 153, 153));
        setForeground(new java.awt.Color(153, 153, 153));
        setResizable(false);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                carregaFormaPagamento(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18));
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Total Pedido");

        txtTotalPedido.setFont(new java.awt.Font("Times New Roman", 0, 18));
        txtTotalPedido.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtTotalPedido.setEnabled(false);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18));
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Número Pedido");

        txtIdPedido.setFont(new java.awt.Font("Times New Roman", 0, 18));
        txtIdPedido.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        txtIdPedido.setEnabled(false);

        jPanel2.setBackground(new java.awt.Color(0, 102, 102));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Forma de Pagamento", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        jTabbedPane1.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jTabbedPane1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                carregaFormaPagamento(evt);
            }
        });

        jPanel3.setFont(new java.awt.Font("Times New Roman", 0, 18));
        jPanel3.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                carregaAbaAutomatica(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jLabel3.setText("Número Parcelas");

        jSpinner1.setFont(new java.awt.Font("Times New Roman", 0, 14));

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jLabel9.setText("Valor do Sinal");

        txtValorSinal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###.00"))));
        txtValorSinal.setFont(new java.awt.Font("Times New Roman", 0, 14));
        txtValorSinal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                atualizaSaldoComEntrada(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(txtValorSinal, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSpinner1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING))
                .addGap(331, 331, 331))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSpinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtValorSinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Automática", jPanel3);

        jPanel4.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                carregaAbaManual(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jLabel4.setText("Valor da Parcela");

        jButton1.setText("Incluir Parcela");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 14));
        jLabel7.setText("Data Vencimento");

        txtValorParcela.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#,###.00"))));
        txtValorParcela.setFont(new java.awt.Font("Times New Roman", 0, 14));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtValorParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(55, 55, 55)
                        .addComponent(jLabel7)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(281, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtValorParcela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Manual", jPanel4);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        jPanel5.setBackground(new java.awt.Color(0, 102, 102));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Parcelas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 14), new java.awt.Color(255, 255, 255))); // NOI18N

        tabelaParcelas.setFont(new java.awt.Font("Times New Roman", 0, 14));
        tabelaParcelas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tabelaParcelas);

        btnRemoveParcela.setText("Remover");
        btnRemoveParcela.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveParcelaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 364, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRemoveParcela)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnRemoveParcela)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18));
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Saldo à Parcelar");

        txtSaldoPedido.setFont(new java.awt.Font("Times New Roman", 0, 18));
        txtSaldoPedido.setForeground(new java.awt.Color(255, 51, 51));

        btnGravaFormaPagamento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ìconIncluir.png"))); // NOI18N
        btnGravaFormaPagamento.setEnabled(false);
        btnGravaFormaPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGravaFormaPagamentoActionPerformed(evt);
            }
        });

        btnCancelaFormaPagamento.setText("Cancelar");
        btnCancelaFormaPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelaFormaPagamentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnGravaFormaPagamento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelaFormaPagamento)
                .addContainerGap(353, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtSaldoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addComponent(jLabel6)
                            .addGap(41, 41, 41))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtTotalPedido, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                            .addComponent(jLabel1))))
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtIdPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addContainerGap(378, Short.MAX_VALUE))
            .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotalPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSaldoPedido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCancelaFormaPagamento, javax.swing.GroupLayout.DEFAULT_SIZE, 41, Short.MAX_VALUE)
                    .addComponent(btnGravaFormaPagamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private DateField txtDataVencimentoParcela;

    //Metodo responsavel por carregar as informações no momento da criação da tela Forma de Pagamento
    private void carregaFormaPagamento(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_carregaFormaPagamento
        
        try {
            
            tabelaParcelas.setModel(parcelaPedidoTableModel);
            parcelaAction.setTableModel(parcelaPedidoTableModel);
            parcelaAction.setPedido(pedido);
            this.formaPagamentoInicial = pedido.getFormaPagamento();
            jSpinner1.addChangeListener(null);
        } catch (Exception ex) {
            Logger.getLogger(FrmPagamentoPedido.class.getName()).log(Level.SEVERE, null, ex);
        }        

        //Obtem a forma de pagamento caso exista, para que seja feita a alteraçao
        FormaPagamento fp = pedido.getFormaPagamento();
        //Obtem as parcelas da forma de pagamento
        List<Parcela> parcelas = fp.getParcelas();

        //Caso ja exista parcelas na forma de pagamento, prepara para popular as informaçoes
        if(!parcelas.isEmpty()){
            //Verifica forma de pagamento automatica ou manual
            //Popula dados na aba Automatico
            if(fp.isCalculoAutomatico()){

                 //Se tiver entrada, preenche o campo
                if(this.parcelaAction.getPedido().getFormaPagamento().getValorEntrada()>0){
                    txtValorSinal.setText(String.valueOf(this.parcelaAction.getPedido().getFormaPagamento().getValorEntrada()));
                }

                jSpinner1.setValue(parcelas.size());
                ((ParcelaPedidoTableModel) tabelaParcelas.getModel()).addListaDeParcelas(parcelas);
                                
                //Zera o saldo já que sendo automatico, nunca havera saldo restante
                txtSaldoPedido.setText(new Util().formataMoeda(0.00));
            }else{
                //Caso tenha utilizado a aba manual
                //Exibe a aba Manual
                //jTabbedPane1.setSelectedIndex(1);
                //Popula parcelas na tabela
                txtSaldoPedido.setText(new Util().formataMoeda(0.00));
                ((ParcelaPedidoTableModel) tabelaParcelas.getModel()).addListaDeParcelas(parcelas);
            }
         }
    }//GEN-LAST:event_carregaFormaPagamento

    private void atualizaSaldoComEntrada(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_atualizaSaldoComEntrada


        try {
            Double totalPedido = this.getPedido().getValorPedido();
            txtValorSinal.commitEdit();
            Double valorEntrada = Double.parseDouble(String.valueOf(txtValorSinal.getValue()));
            
            if(valorEntrada > totalPedido){
                txtValorSinal.setText("0");
                javax.swing.JOptionPane.showMessageDialog(this,"O Valor do Sinal não pode ser maior que o valor total do pedido.","Atenção", 0);
            }else{
                Double valorSaldo = totalPedido - valorEntrada;
                this.parcelaAction.getPedido().getFormaPagamento().setValorEntrada(valorEntrada);
                txtSaldoPedido.setText(new Util().formataMoeda(valorSaldo));
            }
        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this,"Só são permitidos números no campo Valor do Sinal.","Atenção", 0);
            Logger.getLogger(FrmPagamentoPedido.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_atualizaSaldoComEntrada

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        this.adicionaParcelaManual();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void carregaAbaManual(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_carregaAbaManual
        // TODO add your handling code here:
        btnRemoveParcela.setVisible(true);        
         if(parcelaAction.getPedido().getFormaPagamento().getParcelas().isEmpty()){
             txtSaldoPedido.setText(txtTotalPedido.getText());
             txtValorSinal.setText("0,0");
             jSpinner1.setValue(0);             
        }else{
            if(!this.parcelaAction.getPedido().getFormaPagamento().isCalculoAutomatico())
                txtSaldoPedido.setText(new Util().formataMoeda(pedido.getValorPedido()));
                ((ParcelaPedidoTableModel)this.tabelaParcelas.getModel()).limpar();
                this.carregaFormaPagamento(evt);

            }
    }//GEN-LAST:event_carregaAbaManual

    private void carregaAbaAutomatica(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_carregaAbaAutomatica
        // TODO add your handling code here:

        btnRemoveParcela.setVisible(false);

        if(parcelaAction.getPedido().getFormaPagamento().getParcelas()== null || parcelaAction.getPedido().getFormaPagamento().getParcelas().isEmpty()){
             txtSaldoPedido.setText(txtTotalPedido.getText());
             txtValorSinal.setText("0,0");
             jSpinner1.setValue(0);             
        }else{            
                this.carregaFormaPagamento(evt);           
        }             
    }//GEN-LAST:event_carregaAbaAutomatica

    private void btnRemoveParcelaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveParcelaActionPerformed
        // TODO add your handling code here:

        List parcelas = null;
        try {
            if(this.parcelaAction.getFormaPagamento().getParcelas()!= null){
                parcelas = this.parcelaAction.getFormaPagamento().getParcelas();
                int linhaSelecionada = tabelaParcelas.getSelectedRow();
                Parcela parcelaRemovida = (Parcela) parcelas.get(linhaSelecionada);
                double valorParcelaRemovida = parcelaRemovida.getValor();
                double totalSaldo;

                    totalSaldo = new Util().converteValorTextoDouble(txtSaldoPedido.getText());

                double saldoAtualizado = totalSaldo + valorParcelaRemovida;
                txtSaldoPedido.setText(new Util().formataMoeda(saldoAtualizado));
                parcelas.remove(linhaSelecionada);

                Iterator i = parcelas.iterator();
                Integer c = 1;

                while(i.hasNext()){
                    Parcela p = (Parcela) i.next();
                    p.setNumeroParcela(c);
                    c++;
                }
                ((ParcelaPedidoTableModel)tabelaParcelas.getModel()).limpar();
                this.parcelaAction.populaTabelaManual();
               }
            } catch (ParseException ex) {
                Logger.getLogger(FrmPagamentoPedido.class.getName()).log(Level.SEVERE, null, ex);
            }

                if(!parcelas.isEmpty()){
                    btnGravaFormaPagamento.setEnabled(true);
                }else{
                    btnGravaFormaPagamento.setEnabled(false);
                }

        this.parcelaAction.getFormaPagamento().setParcelas(parcelas);
        this.parcelaAction.setFormaPagamento(this.parcelaAction.getFormaPagamento());
    }//GEN-LAST:event_btnRemoveParcelaActionPerformed

    private void btnGravaFormaPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGravaFormaPagamentoActionPerformed
        try {
            // TODO add your handling code here:

            //Verifica se ainda existe saldo a ser incluido no parcelamento
            if (new Util().converteValorTextoDouble(txtSaldoPedido.getText()) > 0) {
                int r = javax.swing.JOptionPane.showConfirmDialog(this,"Ainda consta Saldo à ser negociado. Deseja Prosseguir assim mesmo ?","Atenção", 0);
                if(r == 0){
                    this.parcelaAction.setFormaPagamento(this.parcelaAction.getFormaPagamento());
                    this.parcelaAction.setFormaPagamento(this.parcelaAction.getFormaPagamento());
                    this.setVisible(false);
                }
            }else{
                boolean resultado = this.parcelaAction.getFormaPagamento().getParcelas().isEmpty();
                if(resultado){
                    int retorno = javax.swing.JOptionPane.showConfirmDialog(this,"A forma de pagamento ainda nao foi salva na base de dados. Deseja prosseguir com o cancelamento?","Atenção",1);

                    if(retorno == 0){
                       this.parcelaAction.setFormaPagamento(null);
                       this.dispose();
                       this.setVisible(false);
                       
                    }else{
                        javax.swing.JOptionPane.showMessageDialog(this,"A Forma de Pagamento foi adicionada ao Pedido com sucesso!","Aviso", 1);
                        this.dispose();
                    }
                }else{
                    javax.swing.JOptionPane.showMessageDialog(this,"A Forma de Pagamento foi adicionada ao Pedido com sucesso!","Aviso", 1);
                    this.dispose();
                }
                
                this.setVisible(false);
            }
        } catch (ParseException ex) {
            Logger.getLogger(FrmPagamentoPedido.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGravaFormaPagamentoActionPerformed

    private void btnCancelaFormaPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelaFormaPagamentoActionPerformed
        // TODO add your handling code here:

        if(((ParcelaPedidoTableModel)tabelaParcelas.getModel()).isEmpty()){
            int retorno = javax.swing.JOptionPane.showConfirmDialog(this,"A forma de pagamento ainda nao foi salva na base de dados. Deseja prosseguir com o cancelamento?","Atenção",1);

            if(retorno == 0){
               this.parcelaAction.setFormaPagamento(this.formaPagamentoInicial);
               this.dispose();
               this.setVisible(false);
                              
            }
        }else{
            this.dispose();
            this.setVisible(false);
        }
    }//GEN-LAST:event_btnCancelaFormaPagamentoActionPerformed

    /*Configura numero de parcelas*/
    
ChangeListener listener = new ChangeListener() {       
        
        @Override
          public void stateChanged(ChangeEvent e) {
            adicionaParcelaAutomatica();
          }               
  };


/*Metodo responsavel por incrementar o numeros de parcelas na forma de pagamento automatica*/
public void adicionaParcelaAutomatica(){


    
             //Limpa linhas da tabela
            ((ParcelaPedidoTableModel)tabelaParcelas.getModel()).limpar();
            //Instancia variáveis
            Calendar calendar = Calendar.getInstance();
            //Atribui a data do dia
            calendar.set(calendar.get(Calendar.YEAR), calendar.get(Calendar.MONTH),calendar.get(Calendar.DATE));
            ArrayList parcelas = new ArrayList();
            int numeroParcelas = (Integer)jSpinner1.getValue();           

            if(numeroParcelas >0){
                //Realiza a iteraçao incrementando itens na tabelas
                for(int c = 0; c < numeroParcelas;c++ ){
                    Parcela parcela = new Parcela();
                    parcela.setNumeroParcela(c+1);                
                    calendar.add(Calendar.MONTH, 1);
                    parcela.setDataVencimento(format.format(calendar.getTime()));

                    try {
                        //Obtem o total restante para pagamento
                        double totalPedido = new Util().converteValorTextoDouble(txtTotalPedido.getText());
                        double totalEntrada = new Util().getDoubleValue(txtValorSinal.getText());
                        //Calcula o valor da parcela
                        double valorParcela = (totalPedido-totalEntrada)/numeroParcelas;
                        parcela.setValor(valorParcela);                    
                    } catch (Exception ex) {
                        Logger.getLogger(FrmPagamentoPedido.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    //Inclui a parcela na lista de parcelas
                    parcelas.add(parcela);               
                }    
                txtSaldoPedido.setText(new Util().formataMoeda(0.00));
            }else{
                txtSaldoPedido.setText(txtTotalPedido.getText());
            }

        pedido.getFormaPagamento().setParcelas(parcelas);
        try {
            pedido.getFormaPagamento().setValorTotal(new Util().converteValorTextoDouble(txtTotalPedido.getText()));
        } catch (ParseException ex) {
            Logger.getLogger(FrmPagamentoPedido.class.getName()).log(Level.SEVERE, null, ex);
        }
        pedido.getFormaPagamento().setCalculoAutomatico(true);
        this.parcelaAction.populaTabelaAutomatica();

        if(!parcelas.isEmpty()){
            btnGravaFormaPagamento.setEnabled(true);
        }else{
            btnGravaFormaPagamento.setEnabled(false);
        }
             
}


/*Metodo responsavel por incrementar o numeros de parcelas na forma de pagamento manual*/
public void adicionaParcelaManual(){

            if(this.parcelaAction.getPedido().getFormaPagamento().isCalculoAutomatico()){
                this.parcelaAction.getPedido().getFormaPagamento().setParcelas(null);
            }
            
            //Instancia variáveis
            Calendar calendar = Calendar.getInstance();
            //Atribui a data do dia
            calendar.set(calendar.get(Calendar.YEAR), calendar.get(Calendar.MONTH),calendar.get(Calendar.DATE));
            List parcelas;
            if(this.parcelaAction.getFormaPagamento().getParcelas()==null){
                 parcelas = new ArrayList();
            }else{
                 parcelas = this.parcelaAction.getFormaPagamento().getParcelas();
            }                    

                Parcela parcela = new Parcela();
                parcela.setNumeroParcela(parcelas.size()+1);
                parcela.setDataVencimento(format.format(txtDataVencimentoParcela.getValue()));

                try {

                    double totalSaldo = new Util().converteValorTextoDouble(txtSaldoPedido.getText());
                    double valorParcela = Double.parseDouble(String.valueOf(txtValorParcela.getValue()));
                    if(valorParcela<=totalSaldo){
                        //Limpa linhas da tabela
                         ((ParcelaPedidoTableModel)tabelaParcelas.getModel()).limpar();
                         txtSaldoPedido.setText(new Util().formataMoeda(totalSaldo-valorParcela));                         
                         parcela.setValor(valorParcela);
                         parcelas.add(parcela);
                         pedido.getFormaPagamento().setValorTotal(new Util().converteValorTextoDouble(txtTotalPedido.getText()));
                         this.parcelaAction.getFormaPagamento().setParcelas(parcelas);
                         this.parcelaAction.setFormaPagamento(this.parcelaAction.getFormaPagamento());
                         this.parcelaAction.populaTabelaManual();
                    }else{
                        javax.swing.JOptionPane.showMessageDialog(this,"O Valor da Parcela não pode ser maior que o valor do saldo restante.","Atenção", 0);
                    }
                } catch (Exception ex) {
                    Logger.getLogger(FrmPagamentoPedido.class.getName()).log(Level.SEVERE, null, ex);
                }

                 if(!parcelas.isEmpty()){
                    btnGravaFormaPagamento.setEnabled(true);
                }else{
                    btnGravaFormaPagamento.setEnabled(false);
                }
                pedido.getFormaPagamento().setCalculoAutomatico(false);               
                
}
        


    


    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FrmPagamentoPedido().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelaFormaPagamento;
    private javax.swing.JButton btnGravaFormaPagamento;
    private javax.swing.JButton btnRemoveParcela;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tabelaParcelas;
    private javax.swing.JTextField txtIdPedido;
    private javax.swing.JTextField txtSaldoPedido;
    private javax.swing.JTextField txtTotalPedido;
    private javax.swing.JFormattedTextField txtValorParcela;
    private javax.swing.JFormattedTextField txtValorSinal;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the pedido
     */
    public Pedido getPedido() {
        return pedido;
    }

    /**
     * @param pedido the pedido to set
     */
    public void setPedido(Pedido pedido) {
        this.pedido = pedido;
    }
}
